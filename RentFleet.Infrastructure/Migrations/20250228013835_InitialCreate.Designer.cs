// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RentFleet.Infrastructure.Persistence.Contexts;

#nullable disable

namespace RentFleet.Infrastructure.Migrations
{
    [DbContext(typeof(RentFleetDbContext))]
    [Migration("20250228013835_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RentFleet.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CpfCnpj")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosCaminhao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AlturaCarroceria")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ComprimentoCarroceria")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LarguraCarroceria")
                        .HasColumnType("numeric");

                    b.Property<string>("TipoCaminhao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoCarroceria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("DadosCaminhoes");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosLocalizacaoOperacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAquisicao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilialRegistro")
                        .HasColumnType("text");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<string>("StatusLocacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorAquisicao")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorLocacaoDiaria")
                        .HasColumnType("numeric");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("DadosLocalizacaoOperacoes");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosMoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CapacidadeBagageiro")
                        .HasColumnType("numeric");

                    b.Property<string>("TipoMoto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("DadosMotos");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosSegurancaConformidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataUltimaInspecao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataUltimaManutencao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NumeroSeguro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ProximaManutencao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Seguradora")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusInspecao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusVeiculo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ValidadeSeguro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("DadosSegurancaConformidades");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosTecnicosVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CapacidadeCarga")
                        .HasColumnType("numeric");

                    b.Property<int>("Cilindrada")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroEixos")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroMarchas")
                        .HasColumnType("integer");

                    b.Property<decimal>("PesoBrutoTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PotenciaMotor")
                        .HasColumnType("numeric");

                    b.Property<string>("Tracao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Transmissao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("DadosTecnicosVeiculos");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DocumentoDigitalizado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("UrlDocumento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("DocumentosDigitalizados");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.FotoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UrlImagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("FotosVeiculos");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.LocacaoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Juros")
                        .HasColumnType("numeric");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("QuilometragemFinal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("QuilometragemInicial")
                        .HasColumnType("numeric");

                    b.Property<string>("StatusLocacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorBase")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("LocacoesVeiculos");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.ManutencaoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Custo")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DataManutencao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<decimal>("Quilometragem")
                        .HasColumnType("numeric");

                    b.Property<string>("TipoManutencao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("ManutencoesVeiculos");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.RegraDescontoJuros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Percentual")
                        .HasColumnType("numeric");

                    b.Property<string>("TipoRegra")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoVeiculo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RegrasDescontoJuros");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StatusReserva")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeAtendente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.ValorLocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoVeiculo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorDiaria")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ValoresLocacao");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("integer");

                    b.Property<int>("AnoModelo")
                        .HasColumnType("integer");

                    b.Property<decimal>("CapacidadeTanque")
                        .HasColumnType("numeric");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Combustivel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroPortas")
                        .HasColumnType("integer");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("QuilometragemAtual")
                        .HasColumnType("numeric");

                    b.Property<decimal>("QuilometragemInicial")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosCaminhao", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosLocalizacaoOperacao", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosMoto", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosSegurancaConformidade", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DadosTecnicosVeiculo", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.DocumentoDigitalizado", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.FotoVeiculo", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.LocacaoVeiculo", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.ManutencaoVeiculo", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("RentFleet.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("RentFleet.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentFleet.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
